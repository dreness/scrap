{"name":"Scrap","tagline":"Lompy stankles, who-da-whatnows, and kaboodle kits.","body":"This document augments the elk-docker ReadMe to describe the changes made in the dreness-netflow branch. Also included is a brief 'from scratch' setup guide for OS X. If you already have Docker ready, proceed to [this section](#build-the-dreness-netflow-branch-of-elk-dockergit).\r\n\r\n## OS X Setup #\r\n### install homebrew #\r\n    curl -o hb-install.rb -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install\r\n\r\nLook at hb-install.rb, convince yourself you won't get owned by running it, then run it.\r\n\r\n    ruby hb-install.rb\r\n\r\n### install docker toolchain #\r\n    brew install Caskroom/cask/dockertoolbox\r\n\r\n### create docker host called 'default' #\r\n    docker-machine -D create \\\r\n                      --driver virtualbox \\\r\n                      --virtualbox-cpu-count \"4\" \\\r\n                      --virtualbox-memory \"4096\" \\\r\n                      default\r\n\r\n### Add NAT port maps in docker host for netflow and kibana #\r\n    docker-machine stop default\r\n    VBoxManage modifyvm \"default\" --natpf1 \"kibana,tcp,,5601,,5601\"\r\n    VBoxManage modifyvm \"default\" --natpf1 \"netflow,udp,,9995,,9995\"\r\n    docker-machine start default\r\n### Verify that it's up by SSH'ing to it #\r\n    docker-machine ssh default\r\n(log out of SSH)\r\n#### prepare shell for docker use #\r\n    eval \"$(docker-machine env default)\"\r\n\r\n\r\n## Build the dreness-netflow branch of elk-docker.git #\r\n#### clone the elk-docker repo, move into it, and build a container #\r\n    git clone https://github.com/dreness/elk-docker.git\r\n    cd elk-docker\r\n    git checkout dreness-netflow\r\n    docker-compose build elk\r\n    docker-compose up\r\n(you can control-c without killing the container, or leave it open to watch)\r\n\r\n#### Arrange for your netflow data to be sent to your computer's IP on UDP/9995 #\r\nNB: The included dashboard is currently intended for netflow data collected from a single interface. For example, in a typical firewall situation, if data from both the internal and external interfaces is collected, traffic flowing through the router would be double counted. Not sure yet if it's possible to filter out packets collected from a specific interface, as they arrive with nearly identical netflow fields and values - except for byte count, oddly enough... but I digress.\r\n\r\n#### If you don't already have a netflow probe / exporter in mind, use fprobe: #\r\n    brew install fprobe\r\n    sudo fprobe -v 6 -i en0 -n 5 -f ip -l 2 localhost:9995\r\n\r\n#### Load the kibana web interface and configure the index #\r\n<http://localhost:5601/#/settings/indices/?_g=()>\r\n\r\nYou should be at a 'configure an index pattern' page. Reload the page until the \"Time-field name\" menu appears (the netflow data can take a minute or two to get started). Choose @timestamp from it, then click create.\r\n\r\n#### Edit the format of the 'bytes' field to produce formatted output. #\r\nClick \"settings\", then click the \"logstash-*\" index pattern.\r\nClick the pencil icon adjacent to `netflow.in_bytes` to edit it.\r\nSet the format to Bytes\r\n\r\n#### Import dashboard, visit dashboard #\r\nClick Settings, then Objects in the second nav bar.\r\nImport the combined.json file, or all of the individual json files.\r\nClick 'Dashboard' in the navbar, then click the 'load saved dashboard' icon to the right of the search field. Select the \"Netflow\" dashboard.\r\n\r\nEnjoy :)\r\n\r\n\r\n## Misc\r\n#### restart a previous elk-docker. find its name first: #\r\n    docker ps -l\r\n    docker start <whatever>\r\n\r\n#### Delete docker host. The elk-docker container goes with it. #\r\n    docker-machine rm default\r\n\r\n#### list containers #\r\n    docker ps\r\n\r\n#### show NIC info #\r\n    BoxManage showvminfo default --details | egrep 'NIC [12]' 2>&1\r\n\r\n#### show docker host infos #\r\n    VBoxManage showvminfo default\r\n    VBoxManage list hostonlyifs","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}